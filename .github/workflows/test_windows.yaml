---
name: Windows wheels and test x86_64
on: [pull_request, workflow_dispatch]
jobs:
  build_pyproj:
    name: pyproj ${{ matrix.python }} ${{ matrix.os }} ${{ matrix.triplet }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ "windows-2022" ]
        arch: [ "auto64" ]
        python: [ "3.9", "3.10", "3.11" ]
        triplet: [ "x64-windows" ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "${{ matrix.python }}"

      - name: Install PROJ with vcpkg adn build wheel
        env:
          PROJ_WHEEL: true
          PROJ_NETWORK: ON
          GDAL_VERSION: 3.7.3
          PROJ_SOURCE: 9.1.0
          BUILD_SHARED_LIBS: ON
          PYPROJ_VERSION: 3.6.1
          REPO_DIR: pyproj
          BUILD_PROJ: 1
        shell: cmd
        run: |
          set VCPKG_INSTALLED=C:\tools\vcpkg\installed\%platform%-windows
          set BASE_INST_DIR="C:\tools\installed"
          set PROJ_DIR=%BASE_INST_DIR%\proj-%PROJ_SOURCE:~0,5%
          set
          cd \
          mkdir c:\tools
          git clone https://github.com/Microsoft/vcpkg.git
          cd vcpkg
          .\bootstrap-vcpkg.bat -disableMetrics 
          vcpkg install sqlite3[core,tool]:"%platform%"-windows &
          vcpkg install tiff:"%platform%"-windows &
          vcpkg install curl:"%platform%"-windows
          set PATH=%VCPKG_INSTALLED%\bin;%PATH%
          dir %VCPKG_INSTALLED%\bin
          cd c:\tools
          curl -o "proj-%PROJSOURCE:~0,5%.zip" "https://download.osgeo.org/proj/proj-%PROJSOURCE%.zip"
          7z x -aoa -y "proj-%PROJSOURCE:~0,5%.zip"
          dir
          #
          cd "c:\tools\proj-%PROJSOURCE:~0,5%"
          # set BUILD_PROJ=1
          mkdir build
          cd build
          cmake -GNinja .. -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS="%BUILD_SHARED_LIBS%" -DCMAKE_C_FLAGS="/WX" -DCMAKE_CXX_FLAGS="/WX" -DCMAKE_TOOLCHAIN_FILE=c:/tools/vcpkg/scripts/buildsystems/vcpkg.cmake -DCMAKE_INSTALL_PREFIX="%PROJ_DIR%"
          ninja -v
          ninja install
          set PATH=%PROJ_DIR%\bin;%PATH%
          set PROJ_DATA=%PROJ_DIR%\share\proj
          proj
          #python -m pip wheel . --wheel-dir=${GITHUB_WORKSPACE}/wheels_torepair --no-deps
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl
          retention-days: 7
