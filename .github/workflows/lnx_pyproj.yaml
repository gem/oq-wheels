---
name: Linux pyproj x86_64

on: [pull_request, workflow_dispatch]

env:
  REPO_DIR: pyproj
  WHEEL_SDIR: wheelhouse
  SETUPTOOLS_USE_DISTUTILS: stdlib

jobs:
  build:
    name: pyproj ${{ matrix.python }} ${{ matrix.os-name }} ${{ matrix.platform }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ "ubuntu-22.04" ]
        python: [ "3.8", "3.9", "3.10" ]
        platform: [ "x86_64"]
        os-name: ["jammy"]
    env:
      BUILD_COMMIT: 3.4.0
      PLAT: "${{ matrix.platform }}"
      MB_PYTHON_VERSION: "${{ matrix.python }}"
      MB_ML_VER: "2014"
      BUILD_DEPENDS: "cython wheel"
      TEST_DEPENDS: "cython"
      TRAVIS_OS_NAME: ${{ matrix.os-name }}
      MACOSX_DEPLOYMENT_TARGET: ${{ matrix.macos-target }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: get code of pyproj
        env:
          REPO_DIR: pyproj
          WHEEL_SDIR: wheelhouse
          SETUPTOOLS_USE_DISTUTILS: stdlib
          BUILD_COMMIT: 3.4.0
        run: |
            echo $PATH
            bash -x .github/workflows/build.sh
      - name: Build Wheel of pyproj
        env:
          REPO_DIR: pyproj
          WHEEL_SDIR: wheelhouse
          SETUPTOOLS_USE_DISTUTILS: stdlib
          BUILD_COMMIT: 3.4.0
        run: |
            sudo apt install python3-virtualenv
            bash -x .github/workflows/wheel.sh
      - uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: wheelhouse/*.whl
